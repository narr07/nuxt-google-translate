name: Deploy Playground to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger deployment on pushes to the main branch

  workflow_dispatch:  # Allow manual workflow dispatch

  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
    - uses: actions/checkout@v4
      run: corepack enable

    # Step 2: Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20  # Specify the Node.js version

    # Step 3: Install dependencies for the module
    - name: Install Module Dependencies
      run: npm install

    # Step 4: Build the module
    - name: Build Module
      run: npm run prepack  # Build the module (as defined in your scripts)

    # Step 5: Install dependencies for the playground
    - name: Install Playground Dependencies
    - working-directory: playground
      run: npm install

    # Step 6: Build the playground
    - name: Build Playground
    - working-directory: playground
      run: npm run generate  # Nuxt generates static files

    # Step 7: Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: playground/.output/public  # Nuxt's static output directory
